= Extending the library =

Si es necesario realizar algún cambio o está interesado en ampliar su funcionalidad con nuevos diagramas, requerirá el uso de herramientas especiales y un conocimiento más amplio. 

En este apartado se explicará el proceso de empaquetado y compresión de los ficheros de código de la librería, solo debería leerlo si usted se encuentra en alguno de los siguientes supuestos:

  * Quiere añadir o eliminar algún diagrama de la librería.
  * Ha modificado el código de la librería y necesita volver a empaquetarla.

Para llevar a cabo esta tarea serán necesarias las siguientes aplicaciones: 

  * [http://getsprockets.org/installation_and_usage Sprockets]
  * YUICompressor
  * Empaquetado de la librería 

== NOTA importante ==

Antes de proceder, recuerde que la librería jsUML2 se distribuye bajo licencia GPL3. Para ir mejorando nuestra aportación, así como para referenciar trabajos que hagan uso de ella, recuerde contactar con el coordinador del proyecto (Raúl Romero, jrromero@uco.es) y enviar su aportación al código de la librería o la referencia donde está siendo utilizada, así como su consentimiento (si lo desea) para que se referencie su proyecto desde estas páginas.

== Sprockets ==

Sprockets es la aplicación que se ha elegido para resolver las dependencias entre las clases de Javascript, ya que el lenguaje no tiene un modo nativo de realizar esta tarea, por tanto, esta aplicación una vez instalada es la encargada de analizar todos los ficheros fuente de Javascript y unirlos en uno solo. Reduciendo así el engorro y la ineficiencia de transmitir gran cantidad de ficheros a través de internet.

Sprocketize está escrito en el lenguaje de programación Ruby, por tanto será necesario tener instalada una versión actual del lenguaje en su computadora. 

Una vez se tiene el entorno de Ruby correctamente instalado, proceder a la instalación de Sprocketize es tan sencillo como ejecutar la siguiente línea:

{{{
gem install --remote sprockets
}}}

Si todo ha salido bien, la instalación habrá finalizado y podrá continuar con los siguientes requisitos de instalación, en caso de encontrar algún error, puede dirigirse a la página web de la aplicación.

== YUICompressor ==

YUICompressor es una pequeña aplicación cuya función es comprimir código Javascript, produciendo ficheros fuente igualmente válidos y ejecutables en cualquier plataforma, pero con una reducción en tamaño muy apreciable (en torno al 40%, dependiendo del contenido). Dicha aplicación, es un componente de la librería de programación en Javascript de Yahoo, la YUI (_Yahoo User Interface_).

La aplicación se ha incluido dentro del paquete de la librería, como se puede comprobar la existencia del fichero 'yuicompressor.jar', para comodidad de los desarrolladores, sin embargo, puesto que está escrito en Java y para su uso se requiere la máquina virtual de Java.

== Empaquetado de la librería ==

Una vez se tienen instaladas las aplicaciones necesarias es importante tener una idea de la distribución de los ficheros dentro del directorio de fuentes. Todos los ficheros necesarios para la librería, así como hojas de estilo e imágenes, se encuentran ubicados dentro del directorio 'src', como se detalla a continuación:

{{{
    /src
        /core - Ficheros del núcleo de la librería.
        /modules - Fichero con los diagramas de UML 2.
            /class - Diagramas de clases.
            /component - Diagramas de componentes.
            /sequence - Diagramas de secuencia.
            /usecase - Diagramas de casos de uso.
}}}

Así se comprende claramente la distribución general de los ficheros, cuando la librería es empaquetada, extrae la información sobre los diagramas del directorio 'modules', por tanto, un desarrollador que desee algunos diagramas concretos dentro de su aplicación, deberá añadir o eliminar los que quiera dentro de ese directorio y empaquetar todo de nuevo.

El proceso de empaquetado y compresión de la librería es simple, se proporciona un fichero denominado 'make.sh' en el paquete de la librería, ejecutando este script se realiza todo el proceso y los ficheros del directorio 'build' son sobreescritos con los nuevos. La ejecución del script se realiza del siguiente modo:

{{{
  ./make.sh
}}}

Una vez realizado el proceso, los archivos empaquetados de la librería son sobreescritos, la instalación de los nuevos ficheros se realiza de forma idéntica a como se realiza con los ficheros distribuidos por defecto y no requieren de ningún procedimiento adicional. 